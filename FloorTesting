public class FloorTesting : MonoBehaviour
{    
    public GameObject[] building;

    public GameObject[] floors;

    public GameObject ground;    

    int numFloors;    
    int floorChoice;
    int roofArrayPos;
    float roofPos;
    float levels;
       
    void Start()
    {
        build();
    }
        
    void build()
    {
        int buildingChoice = Random.Range(0, building.Length); //Chooses type of building
        numFloors = Random.Range(0, 5);
        Debug.Log("numFloors = " + numFloors);
        
        levels = 0;

        Instantiate(ground, new Vector3(0, levels, 0), Quaternion.identity); //Builds grass floor in testing

        // Instantiates first floor of buildingChoice

        Instantiate(building[buildingChoice], new Vector3(0, levels, 0), Quaternion.identity); 

        Debug.Log("buildingChoice: " + buildingChoice);

        // Instantiates second floor through floor level numFloors

        for (int i = 0; i < numFloors; i++)
        {
            levels += 3.5f;
            for (int j = 0; j < numFloors; j++)
            {
                floorChoice = Random.Range(0, floors.Length-1);                                       // Chooses a random floor from array 0 to array length
                Instantiate(floors[floorChoice], new Vector3(0, levels, 0), Quaternion.identity);   // Instantiates 'second floor' at y coord 3
                Debug.Log("Iterator J floorChoice: " + floorChoice);
                break;
            }
        }
        // Instantiate Roof
        
        roofPos = (numFloors + 1) * 3.5f;
        roofArrayPos = floors.Length - 1;
        Debug.Log("roofArrayPos = " + roofArrayPos);
        Instantiate(floors[roofArrayPos], new Vector3(0, roofPos, 0), Quaternion.identity);
        Debug.Log("Building the Roof! roofPos = " + roofPos);
    }
}
